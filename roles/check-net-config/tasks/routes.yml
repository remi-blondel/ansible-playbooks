---

- name: Include route variables
  include_vars: routes_vars.yml

- name: Assigning the right router config to a generic var
  set_fact:
    desired_routes: "{{ updated_key_item }}"
  vars:
    updated_key_item: "{{ item.value }}"
  with_dict: "{{ routers_desired_routes }}"
  when: "item.key is in ansible_nodename"

- name: Getting routes with a shell command
  shell: ip route
  register: routes

- name: Parse routes configuration
  set_fact:
    current_routes: "{{ routes.stdout | parse_cli(role_path + '/templates/routes_parser.yml') }}"
  when: routes.stdout_lines is defined

- name: convert routes dict to list
  set_fact:
    current_routes: "{{ item.value }}"
  with_items: "{{ current_routes | dict2items }}"

- name: Comparing required route configuration with current one
  set_fact:
    route_compare: "{{ current_routes | difference(desired_routes) | list }}"

- name: Printing configuration mismatche(s)
  debug:
    msg: 
      - "Route(s) configuration mismatche(s):"
      - "Current: {{ current_routes | difference(desired_routes) | list }}"
      - "Desired: {{ desired_routes | difference(current_routes) | list }}"
  when: "route_compare | length != 0"
  failed_when: "route_compare | length != 0"
